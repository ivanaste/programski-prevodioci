Terminals unused in grammar

    _IF
    _ELSE
    ONLY_IF
    OPERATOR


Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 function: template_function

    5 $@1: ε

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    7 $@2: ε

    8 $@3: ε

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP $@2 _T _ID $@3 _LPAREN template_parameters _RPAREN body

   10 template_parameters: template_parameter
   11                    | template_parameters _COMMA template_parameter

   12 template_parameter: _T _ID

   13 parameter: ε
   14          | _TYPE _ID

   15 $@4: ε

   16 body: _LBRACKET variable_list $@4 statement_list _RBRACKET

   17 variable_list: ε
   18              | variable_list variable

   19 variable: _TYPE _ID _SEMICOLON
   20         | _TYPE _POINTER _ID _SEMICOLON

   21 statement_list: ε
   22               | statement_list statement

   23 statement: compound_statement
   24          | assignment_statement
   25          | return_statement

   26 compound_statement: _LBRACKET statement_list _RBRACKET

   27 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   28                     | _ID _ASSIGN _AMPERSAND _ID _SEMICOLON

   29 num_exp: exp
   30        | num_exp _AROP exp

   31 exp: literal
   32    | function_call
   33    | template_function_call
   34    | _ID
   35    | _POINTER _ID
   36    | _LPAREN num_exp _RPAREN

   37 literal: _INT_NUMBER
   38        | _UINT_NUMBER

   39 $@5: ε

   40 function_call: _ID _LPAREN $@5 argument _RPAREN

   41 $@6: ε

   42 $@7: ε

   43 template_function_call: _ID _RELOP $@6 _TYPE $@7 _RELOP _LPAREN arguments_template _RPAREN

   44 arguments_template: argument_template
   45                   | arguments_template _COMMA argument_template

   46 argument_template: num_exp

   47 argument: ε
   48         | num_exp

   49 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 6 14 19 20 43
    _IF (259)
    _ELSE (260)
    _RETURN (261) 49
    _ID <s> (262) 6 9 12 14 19 20 27 28 34 35 40 43
    _INT_NUMBER <s> (263) 37
    _UINT_NUMBER <s> (264) 38
    _LPAREN (265) 6 9 36 40 43
    _RPAREN (266) 6 9 36 40 43
    _LBRACKET (267) 16 26
    _RBRACKET (268) 16 26
    _ASSIGN (269) 27 28
    _SEMICOLON (270) 19 20 27 28 49
    _AROP <i> (271) 30
    _RELOP <i> (272) 9 43
    _TEMPLATE (273) 9
    _TYPENAME (274) 9
    _T (275) 9 12
    _COMMA (276) 11 45
    _AMPERSAND (277) 28
    _POINTER (278) 20 35
    ONLY_IF (279)
    OPERATOR (280)


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    program (27)
        on left: 1
        on right: 0
    function_list (28)
        on left: 2 3
        on right: 1 3
    function (29)
        on left: 4 6
        on right: 2 3
    $@1 (30)
        on left: 5
        on right: 6
    template_function (31)
        on left: 9
        on right: 4
    $@2 (32)
        on left: 7
        on right: 9
    $@3 (33)
        on left: 8
        on right: 9
    template_parameters (34)
        on left: 10 11
        on right: 9 11
    template_parameter (35)
        on left: 12
        on right: 10 11
    parameter (36)
        on left: 13 14
        on right: 6
    body (37)
        on left: 16
        on right: 6 9
    $@4 (38)
        on left: 15
        on right: 16
    variable_list (39)
        on left: 17 18
        on right: 16 18
    variable (40)
        on left: 19 20
        on right: 18
    statement_list (41)
        on left: 21 22
        on right: 16 22 26
    statement (42)
        on left: 23 24 25
        on right: 22
    compound_statement (43)
        on left: 26
        on right: 23
    assignment_statement (44)
        on left: 27 28
        on right: 24
    num_exp <i> (45)
        on left: 29 30
        on right: 27 30 36 46 48 49
    exp <i> (46)
        on left: 31 32 33 34 35 36
        on right: 29 30
    literal <i> (47)
        on left: 37 38
        on right: 31
    function_call <i> (48)
        on left: 40
        on right: 32
    $@5 (49)
        on left: 39
        on right: 40
    template_function_call <i> (50)
        on left: 43
        on right: 33
    $@6 (51)
        on left: 41
        on right: 43
    $@7 (52)
        on left: 42
        on right: 43
    arguments_template <i> (53)
        on left: 44 45
        on right: 43 45
    argument_template <i> (54)
        on left: 46
        on right: 44 45
    argument <i> (55)
        on left: 47 48
        on right: 40
    return_statement (56)
        on left: 49
        on right: 25


State 0

    0 $accept: • program $end

    _TYPE      shift, and go to state 1
    _TEMPLATE  shift, and go to state 2

    program            go to state 3
    function_list      go to state 4
    function           go to state 5
    template_function  go to state 6


State 1

    6 function: _TYPE • _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 7


State 2

    9 template_function: _TEMPLATE • _RELOP _TYPENAME _T _RELOP $@2 _T _ID $@3 _LPAREN template_parameters _RPAREN body

    _RELOP  shift, and go to state 8


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: function_list •
    3 function_list: function_list • function

    _TYPE      shift, and go to state 1
    _TEMPLATE  shift, and go to state 2

    $default  reduce using rule 1 (program)

    function           go to state 10
    template_function  go to state 6


State 5

    2 function_list: function •

    $default  reduce using rule 2 (function_list)


State 6

    4 function: template_function •

    $default  reduce using rule 4 (function)


State 7

    6 function: _TYPE _ID • $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 5 ($@1)

    $@1  go to state 11


State 8

    9 template_function: _TEMPLATE _RELOP • _TYPENAME _T _RELOP $@2 _T _ID $@3 _LPAREN template_parameters _RPAREN body

    _TYPENAME  shift, and go to state 12


State 9

    0 $accept: program $end •

    $default  accept


State 10

    3 function_list: function_list function •

    $default  reduce using rule 3 (function_list)


State 11

    6 function: _TYPE _ID $@1 • _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 13


State 12

    9 template_function: _TEMPLATE _RELOP _TYPENAME • _T _RELOP $@2 _T _ID $@3 _LPAREN template_parameters _RPAREN body

    _T  shift, and go to state 14


State 13

    6 function: _TYPE _ID $@1 _LPAREN • parameter _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 13 (parameter)

    parameter  go to state 16


State 14

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T • _RELOP $@2 _T _ID $@3 _LPAREN template_parameters _RPAREN body

    _RELOP  shift, and go to state 17


State 15

   14 parameter: _TYPE • _ID

    _ID  shift, and go to state 18


State 16

    6 function: _TYPE _ID $@1 _LPAREN parameter • _RPAREN body

    _RPAREN  shift, and go to state 19


State 17

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP • $@2 _T _ID $@3 _LPAREN template_parameters _RPAREN body

    $default  reduce using rule 7 ($@2)

    $@2  go to state 20


State 18

   14 parameter: _TYPE _ID •

    $default  reduce using rule 14 (parameter)


State 19

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN • body

    _LBRACKET  shift, and go to state 21

    body  go to state 22


State 20

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP $@2 • _T _ID $@3 _LPAREN template_parameters _RPAREN body

    _T  shift, and go to state 23


State 21

   16 body: _LBRACKET • variable_list $@4 statement_list _RBRACKET

    $default  reduce using rule 17 (variable_list)

    variable_list  go to state 24


State 22

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body •

    $default  reduce using rule 6 (function)


State 23

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP $@2 _T • _ID $@3 _LPAREN template_parameters _RPAREN body

    _ID  shift, and go to state 25


State 24

   16 body: _LBRACKET variable_list • $@4 statement_list _RBRACKET
   18 variable_list: variable_list • variable

    _TYPE  shift, and go to state 26

    $default  reduce using rule 15 ($@4)

    $@4       go to state 27
    variable  go to state 28


State 25

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP $@2 _T _ID • $@3 _LPAREN template_parameters _RPAREN body

    $default  reduce using rule 8 ($@3)

    $@3  go to state 29


State 26

   19 variable: _TYPE • _ID _SEMICOLON
   20         | _TYPE • _POINTER _ID _SEMICOLON

    _ID       shift, and go to state 30
    _POINTER  shift, and go to state 31


State 27

   16 body: _LBRACKET variable_list $@4 • statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 32


State 28

   18 variable_list: variable_list variable •

    $default  reduce using rule 18 (variable_list)


State 29

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP $@2 _T _ID $@3 • _LPAREN template_parameters _RPAREN body

    _LPAREN  shift, and go to state 33


State 30

   19 variable: _TYPE _ID • _SEMICOLON

    _SEMICOLON  shift, and go to state 34


State 31

   20 variable: _TYPE _POINTER • _ID _SEMICOLON

    _ID  shift, and go to state 35


State 32

   16 body: _LBRACKET variable_list $@4 statement_list • _RBRACKET
   22 statement_list: statement_list • statement

    _RETURN    shift, and go to state 36
    _ID        shift, and go to state 37
    _LBRACKET  shift, and go to state 38
    _RBRACKET  shift, and go to state 39

    statement             go to state 40
    compound_statement    go to state 41
    assignment_statement  go to state 42
    return_statement      go to state 43


State 33

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP $@2 _T _ID $@3 _LPAREN • template_parameters _RPAREN body

    _T  shift, and go to state 44

    template_parameters  go to state 45
    template_parameter   go to state 46


State 34

   19 variable: _TYPE _ID _SEMICOLON •

    $default  reduce using rule 19 (variable)


State 35

   20 variable: _TYPE _POINTER _ID • _SEMICOLON

    _SEMICOLON  shift, and go to state 47


State 36

   49 return_statement: _RETURN • num_exp _SEMICOLON

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51
    _POINTER      shift, and go to state 52

    num_exp                 go to state 53
    exp                     go to state 54
    literal                 go to state 55
    function_call           go to state 56
    template_function_call  go to state 57


State 37

   27 assignment_statement: _ID • _ASSIGN num_exp _SEMICOLON
   28                     | _ID • _ASSIGN _AMPERSAND _ID _SEMICOLON

    _ASSIGN  shift, and go to state 58


State 38

   26 compound_statement: _LBRACKET • statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 59


State 39

   16 body: _LBRACKET variable_list $@4 statement_list _RBRACKET •

    $default  reduce using rule 16 (body)


State 40

   22 statement_list: statement_list statement •

    $default  reduce using rule 22 (statement_list)


State 41

   23 statement: compound_statement •

    $default  reduce using rule 23 (statement)


State 42

   24 statement: assignment_statement •

    $default  reduce using rule 24 (statement)


State 43

   25 statement: return_statement •

    $default  reduce using rule 25 (statement)


State 44

   12 template_parameter: _T • _ID

    _ID  shift, and go to state 60


State 45

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP $@2 _T _ID $@3 _LPAREN template_parameters • _RPAREN body
   11 template_parameters: template_parameters • _COMMA template_parameter

    _RPAREN  shift, and go to state 61
    _COMMA   shift, and go to state 62


State 46

   10 template_parameters: template_parameter •

    $default  reduce using rule 10 (template_parameters)


State 47

   20 variable: _TYPE _POINTER _ID _SEMICOLON •

    $default  reduce using rule 20 (variable)


State 48

   34 exp: _ID •
   40 function_call: _ID • _LPAREN $@5 argument _RPAREN
   43 template_function_call: _ID • _RELOP $@6 _TYPE $@7 _RELOP _LPAREN arguments_template _RPAREN

    _LPAREN  shift, and go to state 63
    _RELOP   shift, and go to state 64

    $default  reduce using rule 34 (exp)


State 49

   37 literal: _INT_NUMBER •

    $default  reduce using rule 37 (literal)


State 50

   38 literal: _UINT_NUMBER •

    $default  reduce using rule 38 (literal)


State 51

   36 exp: _LPAREN • num_exp _RPAREN

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51
    _POINTER      shift, and go to state 52

    num_exp                 go to state 65
    exp                     go to state 54
    literal                 go to state 55
    function_call           go to state 56
    template_function_call  go to state 57


State 52

   35 exp: _POINTER • _ID

    _ID  shift, and go to state 66


State 53

   30 num_exp: num_exp • _AROP exp
   49 return_statement: _RETURN num_exp • _SEMICOLON

    _SEMICOLON  shift, and go to state 67
    _AROP       shift, and go to state 68


State 54

   29 num_exp: exp •

    $default  reduce using rule 29 (num_exp)


State 55

   31 exp: literal •

    $default  reduce using rule 31 (exp)


State 56

   32 exp: function_call •

    $default  reduce using rule 32 (exp)


State 57

   33 exp: template_function_call •

    $default  reduce using rule 33 (exp)


State 58

   27 assignment_statement: _ID _ASSIGN • num_exp _SEMICOLON
   28                     | _ID _ASSIGN • _AMPERSAND _ID _SEMICOLON

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51
    _AMPERSAND    shift, and go to state 69
    _POINTER      shift, and go to state 52

    num_exp                 go to state 70
    exp                     go to state 54
    literal                 go to state 55
    function_call           go to state 56
    template_function_call  go to state 57


State 59

   22 statement_list: statement_list • statement
   26 compound_statement: _LBRACKET statement_list • _RBRACKET

    _RETURN    shift, and go to state 36
    _ID        shift, and go to state 37
    _LBRACKET  shift, and go to state 38
    _RBRACKET  shift, and go to state 71

    statement             go to state 40
    compound_statement    go to state 41
    assignment_statement  go to state 42
    return_statement      go to state 43


State 60

   12 template_parameter: _T _ID •

    $default  reduce using rule 12 (template_parameter)


State 61

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP $@2 _T _ID $@3 _LPAREN template_parameters _RPAREN • body

    _LBRACKET  shift, and go to state 21

    body  go to state 72


State 62

   11 template_parameters: template_parameters _COMMA • template_parameter

    _T  shift, and go to state 44

    template_parameter  go to state 73


State 63

   40 function_call: _ID _LPAREN • $@5 argument _RPAREN

    $default  reduce using rule 39 ($@5)

    $@5  go to state 74


State 64

   43 template_function_call: _ID _RELOP • $@6 _TYPE $@7 _RELOP _LPAREN arguments_template _RPAREN

    $default  reduce using rule 41 ($@6)

    $@6  go to state 75


State 65

   30 num_exp: num_exp • _AROP exp
   36 exp: _LPAREN num_exp • _RPAREN

    _RPAREN  shift, and go to state 76
    _AROP    shift, and go to state 68


State 66

   35 exp: _POINTER _ID •

    $default  reduce using rule 35 (exp)


State 67

   49 return_statement: _RETURN num_exp _SEMICOLON •

    $default  reduce using rule 49 (return_statement)


State 68

   30 num_exp: num_exp _AROP • exp

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51
    _POINTER      shift, and go to state 52

    exp                     go to state 77
    literal                 go to state 55
    function_call           go to state 56
    template_function_call  go to state 57


State 69

   28 assignment_statement: _ID _ASSIGN _AMPERSAND • _ID _SEMICOLON

    _ID  shift, and go to state 78


State 70

   27 assignment_statement: _ID _ASSIGN num_exp • _SEMICOLON
   30 num_exp: num_exp • _AROP exp

    _SEMICOLON  shift, and go to state 79
    _AROP       shift, and go to state 68


State 71

   26 compound_statement: _LBRACKET statement_list _RBRACKET •

    $default  reduce using rule 26 (compound_statement)


State 72

    9 template_function: _TEMPLATE _RELOP _TYPENAME _T _RELOP $@2 _T _ID $@3 _LPAREN template_parameters _RPAREN body •

    $default  reduce using rule 9 (template_function)


State 73

   11 template_parameters: template_parameters _COMMA template_parameter •

    $default  reduce using rule 11 (template_parameters)


State 74

   40 function_call: _ID _LPAREN $@5 • argument _RPAREN

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51
    _POINTER      shift, and go to state 52

    $default  reduce using rule 47 (argument)

    num_exp                 go to state 80
    exp                     go to state 54
    literal                 go to state 55
    function_call           go to state 56
    template_function_call  go to state 57
    argument                go to state 81


State 75

   43 template_function_call: _ID _RELOP $@6 • _TYPE $@7 _RELOP _LPAREN arguments_template _RPAREN

    _TYPE  shift, and go to state 82


State 76

   36 exp: _LPAREN num_exp _RPAREN •

    $default  reduce using rule 36 (exp)


State 77

   30 num_exp: num_exp _AROP exp •

    $default  reduce using rule 30 (num_exp)


State 78

   28 assignment_statement: _ID _ASSIGN _AMPERSAND _ID • _SEMICOLON

    _SEMICOLON  shift, and go to state 83


State 79

   27 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON •

    $default  reduce using rule 27 (assignment_statement)


State 80

   30 num_exp: num_exp • _AROP exp
   48 argument: num_exp •

    _AROP  shift, and go to state 68

    $default  reduce using rule 48 (argument)


State 81

   40 function_call: _ID _LPAREN $@5 argument • _RPAREN

    _RPAREN  shift, and go to state 84


State 82

   43 template_function_call: _ID _RELOP $@6 _TYPE • $@7 _RELOP _LPAREN arguments_template _RPAREN

    $default  reduce using rule 42 ($@7)

    $@7  go to state 85


State 83

   28 assignment_statement: _ID _ASSIGN _AMPERSAND _ID _SEMICOLON •

    $default  reduce using rule 28 (assignment_statement)


State 84

   40 function_call: _ID _LPAREN $@5 argument _RPAREN •

    $default  reduce using rule 40 (function_call)


State 85

   43 template_function_call: _ID _RELOP $@6 _TYPE $@7 • _RELOP _LPAREN arguments_template _RPAREN

    _RELOP  shift, and go to state 86


State 86

   43 template_function_call: _ID _RELOP $@6 _TYPE $@7 _RELOP • _LPAREN arguments_template _RPAREN

    _LPAREN  shift, and go to state 87


State 87

   43 template_function_call: _ID _RELOP $@6 _TYPE $@7 _RELOP _LPAREN • arguments_template _RPAREN

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51
    _POINTER      shift, and go to state 52

    num_exp                 go to state 88
    exp                     go to state 54
    literal                 go to state 55
    function_call           go to state 56
    template_function_call  go to state 57
    arguments_template      go to state 89
    argument_template       go to state 90


State 88

   30 num_exp: num_exp • _AROP exp
   46 argument_template: num_exp •

    _AROP  shift, and go to state 68

    $default  reduce using rule 46 (argument_template)


State 89

   43 template_function_call: _ID _RELOP $@6 _TYPE $@7 _RELOP _LPAREN arguments_template • _RPAREN
   45 arguments_template: arguments_template • _COMMA argument_template

    _RPAREN  shift, and go to state 91
    _COMMA   shift, and go to state 92


State 90

   44 arguments_template: argument_template •

    $default  reduce using rule 44 (arguments_template)


State 91

   43 template_function_call: _ID _RELOP $@6 _TYPE $@7 _RELOP _LPAREN arguments_template _RPAREN •

    $default  reduce using rule 43 (template_function_call)


State 92

   45 arguments_template: arguments_template _COMMA • argument_template

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51
    _POINTER      shift, and go to state 52

    num_exp                 go to state 88
    exp                     go to state 54
    literal                 go to state 55
    function_call           go to state 56
    template_function_call  go to state 57
    argument_template       go to state 93


State 93

   45 arguments_template: arguments_template _COMMA argument_template •

    $default  reduce using rule 45 (arguments_template)
